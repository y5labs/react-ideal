var o1=Object.defineProperty,l1=Object.defineProperties;var u1=Object.getOwnPropertyDescriptors;var e1=Object.getOwnPropertySymbols;var c1=Object.prototype.hasOwnProperty,f1=Object.prototype.propertyIsEnumerable;var t1=(e,r,i)=>r in e?o1(e,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[r]=i,L=(e,r)=>{for(var i in r||(r={}))c1.call(r,i)&&t1(e,i,r[i]);if(e1)for(var i of e1(r))f1.call(r,i)&&t1(e,i,r[i]);return e},_=(e,r)=>l1(e,u1(r));import{j as J,i as p,H as h1,r as f,D as V,u as Y,a as m1,p as K,b as r1,c as g1}from"./vendor.7898dc0d.js";const x1=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))d(o);new MutationObserver(o=>{for(const t of o)if(t.type==="childList")for(const l of t.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&d(l)}).observe(document,{childList:!0,subtree:!0});function i(o){const t={};return o.integrity&&(t.integrity=o.integrity),o.referrerpolicy&&(t.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?t.credentials="include":o.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function d(o){if(o.ep)return;o.ep=!0;const t=i(o);fetch(o.href,t)}};x1();const s=J.exports.jsx,a1=J.exports.jsxs,p1=J.exports.Fragment;p("ctx",()=>{const e=h1(),r=f.exports.createContext(),i=d=>s(r.Provider,{value:d.hub?d.hub:e,children:d.children});return p("provider",i),{hub:e,HubContext:r,HubProvider:i}});p("ctx",({HubContext:e})=>{const r=f.exports.createContext(),i=({children:d})=>{const[o,t]=f.exports.useState({number:43,time:new Date().valueOf()}),l=f.exports.useContext(e);return f.exports.useEffect(l.effect(u=>{u.on("increment",()=>{t(n=>_(L({},n),{number:n.number+1}))});const m=setInterval(()=>{t(n=>_(L({},n),{time:new Date().valueOf()}))},1e3);return()=>{clearInterval(m)}}),[]),s(r.Provider,{value:o,children:d})};return p("provider",i),{StateContext:r,StateProvider:i}});p("pod",()=>{p("404",()=>s("div",{children:"404 / Page not found"}))});const U=({position:e=[0,0],children:r,onDragStart:i,onDrag:d,onDragEnd:o,onTap:t})=>{const[l,u]=f.exports.useState({isDragging:!1,origin:[0,0],delta:[0,0]}),m=f.exports.useCallback(x=>{u(M=>_(L({},M),{isDown:!0,origin:[x.clientX,x.clientY]})),x.stopPropagation()},[]),n=f.exports.useCallback(({clientX:x,clientY:M})=>{const w=[x-l.origin[0],M-l.origin[1]],T=l.isDragging;if(!(l.isDragging||Math.abs(w[0])>10||Math.abs(w[1])>10))return;!T&&i&&i({clientX:x,clientY:M});const $=d?d({delta:w}):null;u($?z=>_(L({},z),{delta:$,isDragging:!0}):z=>_(L({},z),{isDragging:!0,delta:w}))},[l.origin,l.isDragging,d]),b=f.exports.useCallback(()=>{const x=l.isDragging;u(M=>_(L({},M),{isDown:!1,isDragging:!1,delta:[0,0]})),!x&&t&&t(),x&&o&&o({delta:l.delta})},[o,t,l.isDragging,l.delta]);f.exports.useEffect(()=>(l.isDown?(window.addEventListener("mousemove",n),window.addEventListener("mouseup",b)):(window.removeEventListener("mousemove",n),window.removeEventListener("mouseup",b)),()=>{window.removeEventListener("mousemove",n),window.removeEventListener("mouseup",b)}),[l.isDown,n,b]);const v=f.exports.useMemo(()=>({transform:`translate(${e[0]+l.delta[0]}px, ${e[1]+l.delta[1]}px)`,zIndex:l.isDragging?100:null,position:l.isDragging?"absolute":"relative"}),[e,l.isDragging,l.delta]);return s("div",{style:v,onMouseDown:m,children:r})},D=[["Begundeu",1003,1057],["Agilinnti",1020,1088],["Blildeud",1024,1024],["Rofald",1024,1027],["Chulfrti",1026,1028],["Clon",1028,1077],["Hertkmi",1030,1116],["Waderartm",1032,1123],["Gudalev",1034,1045],["Adardarg",1036,1082],["Gungararun",1041,1096],["Gildaind",1038,1121],["Lenunoc",1053,1117],["Hindil",1056,1108],["Therud",1058,1059],["Erudasild",1061,1140],["Lesschan",1063,1134],["Andand",1066,1151],["Leuisc",1069,1144],["Adrtisia",1071,1135],["Cheldol",1074,1145],["Auldb",1076,1077],["Belbeveosi",1062,1155],["Emnaridge",1081,1148],["Hueberth",1084,1178],["Aunderald",1086,1151],["Berarbe",1089,1165],["Ameraro",1091,1099],["Luisero",1094,1096],["Rodeliva",1098,1099],["Beldading",1089,1162],["Artu",1111,1189],["Adendader",1114,1192],["Dandmnk",1116,1207],["Arerthe",1120,1222],["Thengada",1125,1188],["Emegir",1127,1214],["Rosarara",1133,1134],["Hingerdr",1080,1139],["Adilde",1103,1142],["Chmbano",1105,1106],["Beg",1108,1109],["Emegadect",1110,1175],["Hisandg",1113,1181],["Winailar",1117,1122],["Ramarde",1120,1132],["Inadeudard",1122,1191],["Manchl",1114,1213],["Aderdeldrd",1142,1212],["Auldevais",1144,1150],["Bendudm",1147,1231],["Hischtr",1149,1249],["Eberth",1151,1234],["Befaldeldar",1153,1247],["Hudeo",1157,1235],["Adalderdo",1159,1236],["Baleud",1167,1169],["Fuldordg",1095,1151],["Balibert",1121,1206],["Pailbedo",1123,1191],["Era",1125,1200],["Hisisind",1127,1128],["Mart",1129,1185],["Himbeuist",1132,1211],["Thudinar",1136,1213],["Aunde",1140,1141],["Syrdanbe",1142,1240],["Rotilder",1134,1222],["Marchid",1150,1197],["Hivarli",1153,1225],["Asagrr",1157,1217],["Chaiul",1160,1230],["Eifreber",1162,1167],["Rodarengar",1165,1209],["Enderurgai",1167,1216],["Brtmarber",1171,1228],["Aliltrada",1173,1176],["Hiomeusere",1137,1213],["Belderu",1169,1170],["Lertmuss",1172,1173],["Berderer",1174,1175],["Bersevef",1176,1180],["Ogalde",1178,1179],["Videri",1180,1276],["Hildermasy",1182,1223],["Chanuinh",1184,1252],["Bunicherd",1187,1265],["Erdadint",1190,1276],["Suinotg",1208,1276],["Audisch",1225,1297],["Hidad",1186,1248],["Leldon",1203,1205],["Bungaderschi",1206,1277],["Fotrlisi",1208,1220],["Bena",1211,1277],["Alangudi",1213,1263],["Begollim",1217,1220],["Mertare",1220,1269],["Fadeldiloda",1223,1227],["Erarmundi",1235,1289],["Merarale",1252,1303],["Cyrindom",1254,1336],["Lindel",1257,1259],["Rotrungan",1259,1326],["Thisarnd",1262,1330],["Erndilovid",1266,1330],["Goulfril",1271,1350],["Lesouli",1274,1275],["Emall",1194,1293],["Annchar",1222,1313],["Meranch",1225,1310],["Thebe",1227,1309],["Berdidudi",1230,1231],["Meramer",1233,1234],["Lertino",1235,1238],["Fudando",1238,1287],["Erdegadiv",1244,1328],["Pannna",1249,1294],["Endegaras",1255,1258],["Chanard",1030,1106],["Warbeodo",1055,1068],["Anbertr",1057,1121],["Alisader",1059,1060],["Berildr",1062,1100],["Geotheild",1064,1125],["Ogegudoferd",1067,1068],["Rodil",1070,1129],["Bermel",1072,1083],["Ergarunda",1075,1158],["Boderde",1077,1164],["Thiungai",1084,1126],["Nodu",1101,1169],["Thiscer",1103,1154],["Fothi",1105,1176],["Hischi",1108,1109],["Auderitm",1110,1198],["Adalm",1112,1199],["Gozotisse",1115,1117],["Aderaro",1117,1198],["Hiliothise",1120,1187],["Erulgude",1115,1182],["Leugiser",1130,1133],["Borchi",1133,1193],["Inarar",1136,1149],["Gundera",1139,1140],["Fldolduss",1141,1215],["Eroderodu",1143,1193],["Lolissc",1146,1216],["Bauderd",1153,1239],["Anskeo",1157,1158],["Nomarns",1068,1138],["Tuuseuib",1092,1153],["Giulerd",1095,1151],["Belolon",1097,1170],["Bendech",1100,1180],["Arichari",1103,1107],["Rertkert",1106,1109],["Lisindid",1111,1161],["Hisadad",1113,1211],["Berotmarinoso",1116,1194],["Pullli",1116,1177],["Charuder",1147,1155],["Robsaderdu",1150,1214],["Charp",1152,1156],["Lirass",1155,1232],["Gicer",1158,1219],["Oger",1160,1194],["Goacherot",1163,1217],["Hideraise",1166,1250],["Chartha",1169,1225],["Cher",1060,1121],["Benguder",1090,1170],["Emecthis",1093,1097],["Lebeud",1096,1173],["Endirudeul",1099,1157],["Rotrdadeg",1102,1103],["Baderdar",1108,1161],["Bertinugo",1098,1155],["Fogerd",1124,1125],["Erurdilarl",1127,1190],["Ountfri",1129,1136],["Adelpade",1132,1137],["Odon",1135,1246],["Gerdildet",1138,1191],["Adamunge",1140,1232],["Roviltradeg",1143,1217],["Rotrmerd",1147,1192],["Leginde",1054,1099],["Gunder",1082,1085],["Charerd",1085,1158],["Thinaral",1088,1101],["Befarunga",1091,1169],["Rudert",1093,1155],["Bengai",1096,1098],["Masol",1077,1170],["Fudegido",1100,1174],["Gidegribe",1103,1104],["Gutrgaidu",1106,1165],["Adararas",1108,1211],["Andodora",1110,1206],["Ogeudild",1114,1137],["Hividegu",1118,1195],["Gode",1125,1139],["Gulech",1069,1132],["Liserd",1086,1152],["Hiselend",1088,1138],["Rotegadel",1091,1095],["Anderude",1094,1160],["Teuudeg",1097,1164],["Adolld",1100,1176],["Fodamergar",1067,1098],["Peusser",1083,1144],["Fongarol",1085,1086],["Motherderad",1087,1159],["Baltradild",1089,1151],["Hlinusa",1092,1152],["Budi",1094,1095],["Hisaiseth",1096,1098],["Rotrudel",1098,1194],["Guderuda",1083,1155],["Hildischer",1100,1171],["Araldo",1103,1116],["Hauliltudo",1106,1115],["Endische",1109,1193],["Hertge",1111,1166],["Mosararu",1115,1177],["Regimer",1117,1118],["Bildodga",1119,1120],["Gilolf",1121,1122],["Ogadecth",1044,1138],["Ogarudeu",1061,1062],["Bergunda",1063,1149],["Rotrudeve",1065,1067],["Bethidisile",1068,1130],["Motgaisvar",1071,1155],["Betrdele",1076,1124],["Sisolm",1078,1170],["Leth",1081,1159],["Ogadeld",1080,1147],["Begechad",1098,1184],["Budenara",1100,1173],["Endararude",1103,1193],["Hinilbe",1106,1110],["Gudili",1109,1202],["Lisisa",1111,1186],["Aulif",1113,1114],["Audothadis",1117,1183],["Hidermun",1066,1150],["Rosveldech",1087,1172],["Gudeldudet",1089,1129],["Aderili",1091,1167],["Erdera",1093,1145],["Ararinac",1097,1165],["Arinut",1099,1157],["Aungerade",1102,1103],["Erd",1108,1218],["Wussouse",1061,1142],["Rosile",1079,1140],["Gulparud",1082,1160],["Drbardor",1084,1182],["Eradecheo",1087,1158],["Lobalfr",1090,1161],["Bedolulo",1092,1096],["Adandi",1095,1172],["Hudverdg",1099,1104],["Thagiberi",1042,1133],["Chanchu",1075,1076],["Vigusss",1078,1079],["Agisyar",1080,1150],["Rotrasist",1082,1169],["Beothta",1084,1166],["Sintardu",1087,1144],["Adadever",1089,1142],["Mendadegad",1094,1095],["Marthaig",1104,1189],["Frinaril",1120,1225],["Begicha",1141,1238],["Chincha",1143,1223],["Rogargele",1145,1158],["Autalichi",1147,1148],["Alerud",1150,1211],["Hiu",1152,1240],["Frorthal",1154,1255],["Fufrer",1156,1234],["Ruderude",1159,1170],["Emaisaden",1161,1163],["Henod",1163,1268],["Emerald",1119,1186],["Brondo",1137,1216],["Goduldoz",1140,1198],["Gudeldegi",1143,1144],["Rodildant",1145,1148],["Brberich",1147,1230],["Adega",1150,1198],["Vuinibe",1152,1165],["Gildi",1158,1225],["Andechil",1177,1237],["Histengerdet",1193,1281],["Drinnan",1195,1277],["Berguder",1197,1201],["Sistha",1199,1200],["Gicering",1202,1240],["Fovertrard",1205,1288],["Lierbego",1208,1296],["Lilerndi",1210,1296],["Hicheop",1215,1284],["Ante",1221,1290],["Danalfom",1103,1167],["Berundud",1131,1214],["Adegadam",1134,1219],["Hischertr",1136,1195],["Bartarb",1138,1234],["Thardari",1141,1220],["Harerderth",1145,1160],["Wamboth",1148,1212],["Hil",1150,1207],["Golodgin",1157,1249],["Eberarth",1140,1211],["Berlgideng",1169,1257],["Mardo",1172,1247],["Aundendis",1175,1250],["Hinderti",1178,1179],["Berararuth",1180,1244],["Berdut",1183,1238],["Emarche",1189,1190],["Adile",1145,1188],["Warduss",1166,1245],["Chauineh",1169,1170],["Hisctr",1172,1232],["Emerould",1176,1228],["Hiladi",1179,1180],["Emeruldiech",1173,1254],["Aldermad",1190,1248],["Madarib",1192,1260],["Gili",1194,1195],["Roteladi",1196,1249],["Mameralder",1199,1208],["Gudargali",1201,1295],["Lerde",1205,1285],["Aromari",1209,1293],["Erudar",1212,1213],["Bam",1214,1294],["This",1170,1227],["Pariderti",1189,1194],["Gudarmud",1192,1194],["Gude",1195,1279],["Ameu",1197,1198],["Amnicheud",1200,1285],["Wadudent",1203,1293],["Thldri",1206,1207],["Analfriso",1208,1221],["Berthar",1211,1288],["Bodert",1186,1246],["Andilder",1211,1216],["Erme",1214,1226],["Thiltrgadel",1216,1218],["Rotrgun",1218,1268],["Chortma",1220,1221],["Daro",1223,1309],["Benderad",1226,1285],["Beferderas",1229,1313],["Berderge",1231,1277],["Lis",1234,1287],["Chirdorm",1217,1305],["Lalill",1248,1345],["Hitharg",1251,1322],["Rogeldas",1254,1256],["Hobech",1257,1258],["Gudelbeld",1260,1284],["Endeduer",1263,1272],["Algartrt",1268,1331],["Agegol",1271,1272],["Rardereg",1247,1293],["Tharit",1277,1356],["Bribanoulb",1279,1378],["Aladar",1282,1334],["Rotr",1284,1333],["Hildeg",1221,1297],["Hiararad",1239,1321],["Lugomu",1241,1242],["Anaiuser",1244,1309],["Luvrthu",1246,1334],["Rovartra",1249,1331],["Lerathi",1252,1253],["Endaregu",1255,1347],["Araufonn",1258,1318],["Artheuu",1231,1293],["Leceriba",1256,1257],["Bermectr",1259,1360],["Mertuser",1261,1315],["Grdoda",1263,1335],["Ogisaru",1265,1333],["Wandoz",1268,1350],["Husan",1271,1332],["Belthileg",1273,1347],["Otgildo",1277,1343],["Embeude",1261,1334],["Hiltel",1295,1395],["Beothilt",1297,1298],["Bergade",1299,1323],["Inthaisild",1302,1382],["Lereriun",1304,1305],["Meldader",1307,1308],["Fldo",1310,1311],["Eruder",1313,1409],["Beldeiud",1316,1408],["Fadaldisel",1323,1327],["Manherin",1247,1295],["Gopprdr",1273,1324],["Bechisva",1276,1350],["Enda",1279,1280],["Mosegeverd",1281,1359],["Wannobo",1284,1357],["Budadivai",1286,1364],["Mariche",1288,1296],["Erschilde",1291,1371],["Guldodga",1295,1296],["Lertgertm",1277,1336],["Fot",1300,1372],["Fadengar",1303,1384],["Belelgevi",1305,1374],["Begalhil",1307,1363],["Gudende",1309,1383],["Rungeleld",1311,1368],["Thec",1313,1316],["Thebereg",1316,1321],["Audegeld",1318,1408],["Rovaltr",1321,1330],["Hlinudod",1323,1362],["Herdrti",1305,1344],["Archibert",1340,1392],["Belpaildilbe",1342,1421],["Lebertf",1345,1413],["Hilild",1348,1349],["Belderutrd",1351,1353],["Amardeu",1353,1407],["Erudeude",1355,1356],["Lildega",1357,1424],["Sinssser",1362,1431],["Gilaraldi",1366,1368],["Lercoli",1124,1182],["Amanderer",1151,1233],["Hitradel",1155,1203],["Gododrard",1157,1220],["Hildisil",1159,1161],["Lerenarthi",1163,1228],["Mechegad",1172,1173],["Fustgor",1158,1245],["Mar",1184,1241],["Endeggara",1187,1281],["Hisecher",1189,1197],["Auda",1191,1192],["Berinuli",1193,1231],["Regiss",1195,1197],["Adgeuda",1198,1201],["Audegeradeg",1200,1257],["Gud",1202,1203],["Thartan",1133,1190],["Chalicha",1151,1229],["Rotrarel",1153,1216],["Adaisilderde",1156,1230],["Hischidal",1158,1217],["Lidergudin",1160,1222],["Bunogade",1163,1230],["Adomai",1166,1254],["Gungad",1171,1227],["Odelh",1166,1266],["Rerdare",1192,1258],["Andiegend",1195,1197],["Wararn",1197,1274],["Waro",1199,1296],["Audulino",1201,1202],["Alegelis",1203,1204],["Ansegino",1206,1266],["Genadege",1208,1213],["Benderar",1211,1253],["Gudegerde",1214,1215],["Fothen",1224,1300],["Amessin",1160,1240],["Martigut",1184,1185],["Hicich",1188,1267],["Bedegude",1191,1258],["Rodarudra",1194,1264],["Alatild",1196,1197],["Silildo",1199,1264],["Emelde",1201,1202]].map(([e,r,i])=>({name:e,start_at:V.fromISO("2000-01-01").plus({days:r*5}),end_at:V.fromISO("2000-01-01").plus({days:15+i*5})})),O=120,v1=26,s1=e=>Math.round(e*100)/100,W=(e,r)=>Array(r-e+1).fill().map((i,d)=>e+d),d1=W(0,11).map(e=>{const r=V.fromISO("2020-01-01").plus({months:e});return r.plus({months:1}).diff(r,"days").as("days")}),n1=e=>s1((e.day-1)/d1[e.month-1]*O),i1=e=>s1(e.day/d1[e.month-1]*O),A1=e=>{const r=f.exports.useRef(!1),i=Y({horizontal:!0,size:e.size,parentRef:r,estimateSize:e.calc_col_width,scrollOffsetFn(d){var t;const o=(t=d==null?void 0:d.target.scrollLeft)!=null?t:0;return e.setScrollOffsetLeft&&e.setScrollOffsetLeft(o),o}});return f.exports.useEffect(()=>{"scrollOffsetLeft"in e&&i.scrollToOffset(e.scrollOffsetLeft)},[e.scrollOffsetLeft]),s("div",{ref:r,className:"timeline-axis",children:s("div",{style:{width:`${i.totalSize}px`,position:"relative"},children:e.render(i.virtualItems,(d,o)=>s("div",{style:{width:`${d.size}px`,transform:`translateX(${d.start}px)`},children:o},d.index))})})},y1=e=>{const r=f.exports.useRef(!1),i=Y({size:e.size,parentRef:r,estimateSize:e.calc_row_height,scrollOffsetFn(d){var t;const o=(t=d==null?void 0:d.target.scrollTop)!=null?t:0;return e.setScrollOffsetTop&&e.setScrollOffsetTop(o),o}});return f.exports.useEffect(()=>{"scrollOffsetTop"in e&&i.scrollToOffset(e.scrollOffsetTop)},[e.scrollOffsetTop]),s("div",{ref:r,className:"task-axis",children:s("div",{style:{height:`${i.totalSize}px`,position:"relative"},children:e.render(i.virtualItems,(d,o)=>s("div",{style:{height:`${d.size}px`,transform:`translateY(${d.start}px)`},children:o},d.index))})})},B1=e=>{const r=f.exports.useRef(!1),{events:i}=m1(r),d=Y({size:e.row_size,parentRef:r,estimateSize:e.calc_row_height,scrollOffsetFn(u){var n;const m=(n=u==null?void 0:u.target.scrollTop)!=null?n:0;return e.setScrollOffsetTop&&e.setScrollOffsetTop(m),m}}),o=Y({horizontal:!0,size:e.col_size,parentRef:r,estimateSize:e.calc_col_width,scrollOffsetFn(u){var n;const m=(n=u==null?void 0:u.target.scrollLeft)!=null?n:0;return e.setScrollOffsetLeft&&e.setScrollOffsetLeft(m),m}});f.exports.useEffect(()=>{"scrollOffsetTop"in e&&d.scrollToOffset(e.scrollOffsetTop)},[e.scrollOffsetTop]);const[t,l]=f.exports.useState(null);return s("div",_(L({},i),{ref:r,className:"schedule-grid",children:s("div",{style:{height:`${d.totalSize}px`,width:`${o.totalSize}px`,position:"relative"},children:e.render(d.virtualItems,o.virtualItems,(u,m,n)=>{var z,R,I;if(!n)return;const b=(t==null?void 0:t.c)==m.index&&(t==null?void 0:t.r)==u.index&&(t==null?void 0:t.type)=="move",v=(t==null?void 0:t.c)==m.index&&(t==null?void 0:t.r)==u.index&&(t==null?void 0:t.type)=="start",x=(t==null?void 0:t.c)==m.index&&(t==null?void 0:t.r)==u.index&&(t==null?void 0:t.type)=="end",M=(t==null?void 0:t.r)==u.index,w=n.i==e.selectedIndex,T=w&&!b&&(n.type=="startandend"||n.type=="start")?n.start:null,C=w&&!b&&(n.type=="startandend"||n.type=="end")?n.end:null,$=()=>n.type=="startandend"?s("div",{className:"s e",style:{position:"absolute",top:0,width:`${n.end-n.start}px`,marginLeft:`${n.start}px`}}):n.type=="start"?s("div",{className:"s",style:{width:`${O-n.start}px`,marginLeft:`${n.start}px`}}):n.type=="end"?s("div",{className:"e",style:{width:`${n.end}px`}}):n.type=="middle"?s("div",{className:"m",style:{width:`${O}px`}}):"";return a1("div",{style:{width:`${m.size}px`,height:`${u.size}px`,transform:`translateX(${m.start}px) translateY(${u.start}px)`},children:[s("div",{className:b?"moving":v?"moving-start":x?"moving-end":M?"imposter":t!=null?"":w?"selected":"",children:s(U,{onTap:()=>e.onTap&&e.onTap({task:n.t,index:n.i}),onDragStart:()=>l({c:m.index,r:u.index,type:"move"}),onDrag:({delta:y})=>(l(F=>_(L({},F),{delta:y})),[y[0],0]),onDragEnd:({delta:y})=>{l(null),e.onMove&&e.onMove({task:n.t,index:n.i,delta:y})},children:b||v||x?s("div",{className:"s e d",style:{position:"absolute",top:0,width:`${n.end-n.start-(v?(z=t==null?void 0:t.delta)==null?void 0:z[0]:0)+(x?(R=t==null?void 0:t.delta)==null?void 0:R[0]:0)}px`,marginLeft:`${n.start+(v?(I=t==null?void 0:t.delta)==null?void 0:I[0]:0)}px`}}):$()})}),T!=null&&s("div",{className:"handle-start",style:{marginLeft:`${n.start}px`},children:s(U,{onDragStart:()=>l({c:m.index,r:u.index,type:"start",delta:[0,0]}),onDrag:({delta:y})=>(l(F=>_(L({},F),{delta:y})),[y[0],0]),onDragEnd:({delta:y})=>{l(null),e.onMoveStart&&e.onMoveStart({task:n.t,index:n.i,delta:y})},children:s("div",{})})}),C!=null&&s("div",{className:"handle-end",style:{marginLeft:`${n.end}px`},children:s(U,{onDragStart:()=>l({c:m.index,r:u.index,type:"end",delta:[0,0]}),onDrag:({delta:y})=>(l(F=>_(L({},F),{delta:y})),[y[0],0]),onDragEnd:({delta:y})=>{l(null),e.onMoveEnd&&e.onMoveEnd({task:n.t,index:n.i,delta:y})},children:s("div",{})})}),(b||v||x)&&s("div",{className:"imposter",children:$()})]},`${u.index}/${m.index}`)})})}))};p("pod",({StateContext:e,HubContext:r})=>{p("route",["/",i=>()=>s(()=>{const[o,t]=f.exports.useState(0),[l,u]=f.exports.useState(0),[m,n]=f.exports.useState(null),b=[V.min(...D.map(({start_at:a})=>a)),V.max(...D.map(({end_at:a})=>a))],v=b[0].startOf("month"),x=b[1].startOf("month").diff(v,["months"]).as("months")+1,M=a=>v.plus({months:a}).toFormat("MMM yy"),w=a=>W(a[0],a[1]).map(M),T=[0,D.length-1],C=T[1]-T[0]+1,$=a=>D[a].name,z=a=>W(a[0],a[1]).map($),R={},I=(a,c,h)=>(R[a]||(R[a]={}),R[a][c]||(R[a][c]=h()),R[a][c]),y=(a,c)=>{const h=[v.plus({months:c[0]}),v.plus({months:c[1]+1})],A=W(a[0],a[1]).map(B=>W(c[0],c[1]).map(E=>{var H;return(H=R==null?void 0:R[B])==null?void 0:H[E]})),g=D.slice(a[0],a[1]).map((B,E)=>({t:B,i:E})).filter(({t:B})=>B.end_at>=h[0]&&B.start_at<h[1]);for(const{t:B,i:E}of g){const H=E+a[0],k=[B.start_at.startOf("month").diff(v,["months"]).as("months"),B.end_at.startOf("month").diff(v,["months"]).as("months")],G=k[0]-c[0],S=A[E],X={t:B,i:H,s:m==H};if(k[0]==k[1])S[G]||(S[G]=I(H,k[0],()=>_(L({},X),{type:"startandend",start:n1(B.start_at),end:i1(B.end_at)})));else{const N=k[1]-c[0],P=[n1(B.start_at),i1(B.end_at)];if(S[G]||(S[G]=I(H,k[0],()=>_(L({},X),{type:"start",start:P[0],end:(N-G)*O+P[1]}))),S[N]||(S[N]=I(H,k[1],()=>_(L({},X),{type:"end",start:(G-N)*O+P[0],end:P[1]}))),N-G>1)for(const j of W(G+1,N-1))S[j]||(S[j]=I(H,j+c[0],()=>_(L({},X),{type:"middle",start:(G-j)*O+P[0],end:(N-j)*O+P[1]})))}}return A},[F,q]=f.exports.useState(0),Q=f.exports.useCallback(()=>O,[F]),Z=f.exports.useCallback(()=>v1,[F]);return a1("div",{className:"wrapper",children:[s("div",{className:"task-title",children:"Tasks"}),s(A1,{setScrollOffsetLeft:u,scrollOffsetLeft:l,size:x,calc_col_width:Q,render:(a,c)=>{const h=[1/0,-1/0];for(const g of a)h[0]=Math.min(h[0],g.index),h[1]=Math.max(h[1],g.index);const A=w(h);return a.map(g=>c(g,A[g.index-h[0]]))}}),s(y1,{setScrollOffsetTop:t,scrollOffsetTop:o,size:C,calc_row_height:Z,render:(a,c)=>{const h=[1/0,-1/0];for(const g of a)h[0]=Math.min(h[0],g.index),h[1]=Math.max(h[1],g.index);const A=z(h);return a.map(g=>c(g,A[g.index-h[0]]))}}),s(B1,{selectedIndex:m,setScrollOffsetTop:t,scrollOffsetTop:o,setScrollOffsetLeft:u,scrollOffsetLeft:l,row_size:C,col_size:x,calc_row_height:Z,calc_col_width:Q,onMove:({task:a,index:c,delta:h})=>{const A=h[0]/O;D[c].start_at=a.start_at.plus({months:A}),D[c].end_at=a.end_at.plus({months:A}),q(g=>g+1)},onMoveStart:({task:a,index:c,delta:h})=>{const A=h[0]/O;D[c].start_at=a.start_at.plus({months:A}),q(g=>g+1)},onMoveEnd:({task:a,index:c,delta:h})=>{const A=h[0]/O;D[c].end_at=a.end_at.plus({months:A}),q(g=>g+1)},onTap:({task:a,index:c})=>{m==c?n(null):n(c),q(h=>h+1)},render:(a,c,h)=>{const A=[1/0,-1/0];for(const E of a)A[0]=Math.min(A[0],E.index),A[1]=Math.max(A[1],E.index);const g=[1/0,-1/0];for(const E of c)g[0]=Math.min(g[0],E.index),g[1]=Math.max(g[1],E.index);const B=y(A,g);return a.map(E=>c.map(H=>h(E,H,B[E.index-A[0]][H.index-g[0]])))}})]})},{})])});p("pod",()=>{p("route",["/orders",e=>()=>s("div",{children:"Orders Page"})])});p("pod",({RouterContext:e})=>{p("app",()=>{const r=f.exports.useContext(e),i=p.one("404");return s(p1,{children:s("article",{children:r?s(r,{}):s(i,{})})})})});p("ctx",({HubContext:e})=>{const r=f.exports.createContext(),i=d=>{const[o,t]=f.exports.useState(),{children:l}=d,u=f.exports.useContext(e),m=window.location.hostname,n=m.split("."),b=n.length==3?n[0]:null;return f.exports.useEffect(()=>{K("*",(v,x)=>{x(),window.scrollTo(0,0)}),p.many("route").forEach(v=>r1(...v)),r1.routes().forEach(v=>{K(v.pattern,(x,M)=>{const w={hostname:m,subdomain:b,url:x.pathname,params:x.params,querystring:x.querystring};let T=!1;const C=v.cb(w,()=>{T=!0,M()});T||(t(()=>C),u.emit("navigate",w,C))})}),K.start()},[]),s(r.Provider,{value:o,children:l})};return p("provider",i),{RouterContext:r,RouterProvider:i}});p("pod",async()=>{const e=p.one("app"),r=()=>p.many("provider").reverse().reduce((i,d)=>s(d,{children:i}),s(e,{}));g1.exports.render(s(r,{}),document.getElementById("root"))});(async()=>{const e={};for(let r of p.many("ctx"))Object.assign(e,await r(e));for(let r of p.many("pod"))await r(e);await e.hub.emit("ready")})();
